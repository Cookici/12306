server:
  port: 9005

spring:
  application:
    name: index12306-aggregation${unique-name:}-service
  datasource:
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:shardingsphere-config-${database.emv:dev}.yml
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: 123456
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        import-check:
          enabled: false
      username: nacos
      password: nacos
    sentinel:
      transport:
        dashboard: localhost:8686
        port: 8719
  dynamic:
    thread-pool:
      nacos:
        data-id: hippo4j-nacos.yaml
        group: DEFAULT_GROUP
      config-file-type: yml
      executors:
        - thread-pool-id: 'select-seat-thread-pool-executor'
          alarm: false
          allow-core-thread-time-out: true
          blocking-queue: SynchronousQueue
          core-pool-size: 20
          maximum-pool-size: 40
          keep-alive-time: 9999
          rejected-handler: CallerRunsPolicy

  main:
    allow-bean-definition-overriding: true

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    group: index12306_aggregation-service_common-message-execute_pg
    send-message-timeout: 2000
    retry-times-when-send-failed: 1
    retry-times-when-send-async-failed: 1

pay:
  alipay:
    alipay-public-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmBuzgNkTRplAeNRAzJRGTPCNUQvnWrPlDqN9P9ONMRtk2UFoIj4ivkF2tHLU5LAshNT/FS3SR694vwEC3lhyz5RysHXKYx0lRgkbizV17Nd5RPLgfC/AY8UxNFwA+4Glo848mU/5KgmLpajhJDleyVoVz/RO5eibXyp917gPjNN9W/w9uiTKPOB7isSEcvpvwQFyrRKHROG9bDLWaxPCy1UFKvvpwDEXlFT77MdzuqngcBbqsLrpwkp5I/2+M6hXDReGC/j7M2tVk00EnJRsr5VF0h8c2qvkMlkA5t2+Yc1U1E2tBoEIGZcxYxu1i8q97tq/zAbp3rQt8XqPf77GZwIDAQAB
    app-id: 9021000132639645
    charset: UTF8
    format: json
    notify-url: http:///z39d63.natappfree.cc/api/pay-service/callback/alipay
    private-key: MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCYG7OA2RNGmUB41EDMlEZM8I1RC+das+UOo30/040xG2TZQWgiPiK+QXa0ctTksCyE1P8VLdJHr3i/AQLeWHLPlHKwdcpjHSVGCRuLNXXs13lE8uB8L8BjxTE0XAD7gaWjzjyZT/kqCYulqOEkOV7JWhXP9E7l6JtfKn3XuA+M031b/D26JMo84HuKxIRy+m/BAXKtEodE4b1sMtZrE8LLVQUq++nAMReUVPvsx3O6qeBwFuqwuunCSnkj/b4zqFcNF4YL+Psza1WTTQSclGyvlUXSHxzaq+QyWQDm3b5hzVTUTa0GgQgZlzFjG7WLyr3u2r/MBunetC3xeo9/vsZnAgMBAAECggEAH8FYvkOTZJ/F9/PH+23RJ2ro9cyYZjU8UswK7/JIfcIMUdb32H5EXpfoIk/+5idpg+m7vz4rsk+N08JwSN8KSQ/iybgtoneJOo/YMj3c+q8ZYC2cdBC8B5g5Z4b1pYwxensp54/sorwPbWxOZHOduEeYWivU9OaU2U9Tql+Az5NcpM5ohgVMStaGLDpwd8eNBmfTglB0sPD8p+UYxM9cPGsfgmIhIMfEY2xQQvDlJPgYrOitCbw+sJsOuo2wdg4dil0KigBFWLX1idiRghqPCvUdWdbIpNi3Q+ssh5cq0SBm/hq1sDjb2WvtSKkYsCE6spitRpXr1d05Xq5XSYz9UQKBgQDcwO0bLjV7Cuz5AXiPdutqAp3y/mOrsWvAeBoUxEnSuIlJ3AIWnJc6n1Y8iFnwoQy27ZCbjJSZj9ugBVLC2hOiK5/YxMmrAgJ1DTROQieg5Ey7SlzC7JAWHNqJYoZtULsiRQpYwhTUByB8NHiZxTMoQf67+p5ekAVc9i0RPQRdewKBgQCwZPcpDMe2LSVfrtGmlSY+/9KkWkxiFHVlmtBVZKAUwCTVXPDaTpTdO+7Zc5ln5a/qvD2ZrVAHu7MUcKaCe8X18ph6g94COc4Y6+sR/FikUtIiSzVzWJ86G5XiYNV06THHaZ9jx5yprrPNwc76hceeSRF0gfpK8k6VLxlwynzpBQKBgFN6hW9k3waDkC9ttfiSoN161d4BAxH3SucCw+IchEoyTIBouUVxu+KIRKUpbtGHJXa7iZa456zWcNgniy9yJkCKPK1NZXHMlb9L2f7KF5BJJRciPMfdi3NBQAb6AhmukMWZ1BrScevoMgmmEgEcSIctxbWyRVc/ITgRQ+Oj7lWnAoGAEQCaZkWKFoBBgviJ0sG7nwTvm9HsXOPV8QY8II8DcxyWME62FITQioaVXjZrSf10uG6OjXqMJUKtX0IAesFNcoiAtAZz5skFmZdb4C7vqF8nTBDtxQF8z5ALIXft+0fi+XKv32FFM4HYaPPObI1qkVI/sXg51PGIK48Pp7SM17UCgYBv0t38Mw53LBbycw6uYKe6FOeo2I9a4nqp6Mgddr/GTFACSoHr78LA6AbpU7Q1aB4ZqO4anGNjW87wyYYxUmTsyKwZkJ4KsUkv0NLrDdQhtX6/KEQ/PrajGuVjqvtvA/m1UMMdDP9fCNKlX26GDNJSscRdcko0yWF6fZtypDb8xA==
    server-url: https://openapi-sandbox.dl.alipaydev.com/gateway.do
    sign-type: RSA2

mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: delFlag
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

aggregation:
  remote-url: http://127.0.0.1:${server.port}

framework:
  fastjson:
    safa-mode: true
  cache:
    redis:
      value-timeout: 50000
      bloom-filter:
        user-register:
          name: user_register_cache_penetration_bloom_filter${unique-name:}

management:
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    tags:
      application: ${spring.application.name}

ticket:
  availability:
    cache-update:
      type: binlog